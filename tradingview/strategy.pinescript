//@version=5
strategy("5min scalping EMA50, EMA200, MACD", overlay=true)

EMAClose50 = ta.ema(close, 50)
EMAClose200 = ta.ema(close, 200)

plot(EMAClose50, color=color.yellow)
plot(EMAClose200, color=color.green)

crossover = ta.crossover(EMAClose50, EMAClose200)
crossunder = ta.crossunder(EMAClose50, EMAClose200)

// goLong = false
// goShort = false
// if (crossover) 
//     goLong := true
//     goShort := false
// else if (crossunder) 
//     goLong := false
//     goShort := true


// MACD Plot
fast_length = input(title="Fast Length", defval=12)
slow_length = input(title="Slow Length", defval=26)
src = input(title="Source", defval=close)
signal_length = input.int(title="Signal Smoothing",  minval = 1, maxval = 50, defval = 9)
sma_source = input.string(title="Oscillator MA Type",  defval="EMA", options=["SMA", "EMA"])
sma_signal = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"])
// Plot colors
col_grow_above = input(#26A69A, "Above   Grow", group="Histogram", inline="Above")
col_fall_above = input(#B2DFDB, "Fall", group="Histogram", inline="Above")
col_grow_below = input(#FFCDD2, "Below Grow", group="Histogram", inline="Below")
col_fall_below = input(#FF5252, "Fall", group="Histogram", inline="Below")
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))

if (hist <= -40)
    strategy.entry("5min Long", strategy.long, qty=1, comment="Long")
if (hist >= 40)
	strategy.entry("5min Short", strategy.short, qty=1, comment="Short")